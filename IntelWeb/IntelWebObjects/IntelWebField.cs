using System;
using System.Data;
using System.Data.OleDb;
using System.Runtime.Serialization;

namespace IntelWeb
{
    public class FieldRights
    {
        private bool _allowview;
        private bool _allowedit;
        public bool allowView{
            get
            {
                return _allowview;
            }
            internal set
            {
                _allowview = value;
            }
        }
        public bool allowEdit
        {
            get
            {
                return _allowedit;
            }
            internal set
            {
                _allowedit = value;
            }
        }
    }
	
    [DataContract]
    public class IntelWebField
    {
        private OleDbType _type = OleDbType.VarChar;
        private int _size = 50;
        private byte _precision = 50;
        private byte _scale = 0;
        private DataRowVersion _version = DataRowVersion.Current;
        private string _name;
        private object _fieldValue;
        private object _previousValue;
        private bool _nullable = true;
        private ApplicationException _error;
        private bool _isdirty;
        private FieldRights _fieldRights;
        private bool _isautogenerated = false;

        public OleDbParameter parameter
        {
            get
            {
                //For DatTime parameters that are equal to minvalue we need to return a null instead
                if ((_type.Equals(OleDbType.DBDate) || _type.Equals(OleDbType.DBTimeStamp)) && (this.fieldValue == null || this.fieldValue.Equals(DateTime.MinValue)))
                {

                    return new OleDbParameter(_name, _type, _size, ParameterDirection.Input, _nullable, _precision, _scale, null, _version, DBNull.Value);
                }
                else
                {
                    return new OleDbParameter(_name, _type, _size, ParameterDirection.Input, _nullable, _precision, _scale, null, _version, _fieldValue??DBNull.Value);
                }
            }
        }
        public ApplicationException validationError{get {return _error;} set{_error = value;}}
        public OleDbType type { get { return _type; } set { _type = value; } }
        public int size{get{return _size;} set{_size = value;}}
        public byte precision{get{return _precision;} set{_precision = value;}}
        public byte scale{get{return _scale;} set{_scale = value;}}
        public DataRowVersion version{get{return _version;} set{_version = value;}}
        [DataMember]
        public string name {get {return _name;} set { _name = value;}}
        [DataMember]
        public object fieldValue {get{return _fieldValue;} set {
            _previousValue = _fieldValue;
            _fieldValue = value;
        
        }}
        public object previousValue { get { return _previousValue; } set { _previousValue = value; } }
        public bool nullable {get {return _nullable; } set { _nullable = value;}}
        public bool isDirty { get { return _isdirty; } set { _isdirty = value; } }
        public bool isAutoGenerated { get { return _isautogenerated; } set { _isautogenerated = value; } }
        
        public FieldRights fieldRights
        {
            get
            {
                return _fieldRights;
            }
            internal set
            {
                _fieldRights = value;
            }
        }
        public IntelWebField(string fieldname, OleDbType fieldtype, int fieldsize, byte fieldprecision, byte fieldscale, DataRowVersion fieldversion, bool isnullable, object fieldvalue)
        {
            this.name = fieldname;
            this.type = fieldtype;
            this.size = fieldsize;
            this.precision = fieldprecision;
            this.scale = fieldscale;
            this.version = fieldversion;
            this.nullable = isnullable;
            _fieldValue = fieldvalue;
            this.previousValue = fieldValue;
            _isdirty = false;
        }

        public IntelWebField(string fieldname, OleDbType fieldtype, int fieldsize, byte fieldprecision, byte fieldscale, DataRowVersion fieldversion, bool isnullable, object fieldvalue,bool autoGenerated)
        {
            this.name = fieldname;
            this.type = fieldtype;
            this.size = fieldsize;
            this.precision = fieldprecision;
            this.scale = fieldscale;
            this.version = fieldversion;
            this.nullable = isnullable;
            _fieldValue = fieldvalue;
            this.previousValue = fieldValue;
            this.isAutoGenerated = autoGenerated;
            _isdirty = false;
        }

        public IntelWebField Clone()
        {
            IntelWebField myfield = (IntelWebField)this.MemberwiseClone();

            return myfield;
        }


    }
}
